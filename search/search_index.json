{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RdfCrate","text":"<p>RO-Crate builder that uses RDF concepts.</p> <p>Detailed documentation available here.</p>"},{"location":"#advantages","title":"Advantages","text":"<ul> <li>Simple API that doesn\u2019t require understanding JSON-LD</li> <li>Library of types and properties to speed up development and ensure   correctness</li> <li>Valid JSON-LD guaranteed</li> <li>Leverage <code>rdflib</code> to query your crate</li> <li>Type checker friendly</li> </ul>"},{"location":"#example","title":"Example","text":"<p>Let\u2019s say you have a directory with one file in it, which you want to document. Here\u2019s how you could make an RO-Crate using RdfCrate:</p> <pre><code>from rdfcrate import AttachedCrate, uris\nfrom rdflib import Literal\n\ncrate = AttachedCrate(\"/path/to/crate\")\ncrate.register_file(\"salvatore.jpg\", [\n    (uris.name, Literal(\"Salvatore the Seal\"))\n])\nprint(crate.compile())\n</code></pre> <pre><code>{\n  \"@context\": \"https://w3id.org/ro/crate/1.1/context\",\n  \"@graph\": [\n    {\n      \"@id\": \".\",\n      \"@type\": \"Dataset\"\n    },\n    {\n      \"@id\": \"ro-crate-metadata.json\",\n      \"@type\": \"File\",\n      \"about\": {\n        \"@id\": \".\"\n      },\n      \"conformsTo\": {\n        \"@id\": \"https://w3id.org/ro/crate/1.1\"\n      },\n      \"encodingFormat\": \"application/json\"\n    },\n    {\n      \"@id\": \"salvatore.jpg\",\n      \"@type\": \"File\",\n      \"encodingFormat\": \"image/jpeg\",\n      \"name\": \"Salvatore the Seal\"\n    }\n  ]\n}\n</code></pre>"},{"location":"dev/","title":"Dev","text":""},{"location":"dev/#building-docs","title":"Building Docs","text":"<pre><code>quarto render README.qmd\nquarto render docs/guide.qmd\nmkdocs build\n</code></pre>"},{"location":"dev/#regenerating-uris","title":"Regenerating URIs","text":"<ul> <li>Comment out the contents of <code>__init__.py</code></li> <li><code>doit</code></li> <li>Uncomment out the contents of <code>__init__.py</code></li> </ul>"},{"location":"docs/api/","title":"API","text":""},{"location":"docs/api/#rdfcrate.wrapper.RoCrate","title":"<code>rdfcrate.wrapper.RoCrate</code>  <code>dataclass</code>","text":"<p>Abstract class containing common functionality for both attached and detached RO-Crates</p>"},{"location":"docs/api/#rdfcrate.wrapper.RoCrate.graph","title":"<code>graph: Graph = field(init=False, default_factory=Graph)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p><code>rdflib.Graph</code> containing the RO-Crate metadata. This can be accessed directly, but it is recommended to use the other methods provided by this class where available.</p>"},{"location":"docs/api/#rdfcrate.wrapper.RoCrate.version","title":"<code>version: SpecVersion = field(kw_only=True, default=ROCrate1_1)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Version of the RO-Crate specification to use</p>"},{"location":"docs/api/#rdfcrate.wrapper.RoCrate.add_entity","title":"<code>add_entity(id: IdentifiedNode, type: Type, attrs: Attributes = []) -&gt; IdentifiedNode</code>","text":"<p>Adds any type of entity to the crate</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>IdentifiedNode</code> <p>ID of the entity being added</p> required <code>type</code> <code>Type</code> <p>Type of the entity being added</p> required <code>attrs</code> <code>Attributes</code> <p>Attributes of the entity being added</p> <code>[]</code> <p>Returns:</p> Type Description <code>IdentifiedNode</code> <p>The ID of the new entity</p> Example <pre><code>from rdflib import BNode,\nfrom rdfcrate import uris\n\ncrate.add_entity(BNode(), [uris.Person], [(uris.name, Literal(\"Alice\"))])\n</code></pre>"},{"location":"docs/api/#rdfcrate.wrapper.RoCrate.add_metadata","title":"<code>add_metadata(entity: IdentifiedNode, attrs: Attributes) -&gt; IdentifiedNode</code>","text":"<p>Add metadata for an existing entity.</p> <p>Returns:</p> Type Description <code>IdentifiedNode</code> <p>The ID of the updated entity</p> <p>Parameters:</p> Name Type Description Default <code>entity</code> <code>IdentifiedNode</code> <p>ID of the entity being described</p> required <code>attrs</code> <code>Attributes</code> <p>Attributes of the entity being described</p> required"},{"location":"docs/api/#rdfcrate.wrapper.RoCrate.compile","title":"<code>compile() -&gt; str</code>","text":"<p>Compiles the RO-Crate to a JSON-LD string</p>"},{"location":"docs/api/#rdfcrate.wrapper.RoCrate.register_dir","title":"<code>register_dir(path: str, attrs: Attributes = {}, **kwargs: Any) -&gt; IdentifiedNode</code>","text":"<p>Adds metadata for a directory</p> <p>Returns:</p> Type Description <code>IdentifiedNode</code> <p>The ID of the new directory entity</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>Path to the directory, which must be within the crate root</p> required <code>attrs</code> <code>Attributes</code> <p>Attributes used to describe the <code>Dataset</code> entity</p> <code>{}</code> Example <pre><code>from rdfcrate import uris, AttachedCrate\n\nAttachedCrate(\".\").register_dir(\"./some/dir\", [\n    (uris.description, Literal(\"This is a directory I am describing\")),\n])\n</code></pre>"},{"location":"docs/api/#rdfcrate.wrapper.RoCrate.register_file","title":"<code>register_file(path: str, attrs: Attributes = [], guess_mime: bool = True, **kwargs: Any) -&gt; IdentifiedNode</code>","text":"<p>Adds file metadata to the crate</p> <p>Returns: The ID of the new file entity</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>Path or URL to the file being added</p> required <code>attrs</code> <code>Attributes</code> <p>Attributes used to describe the <code>File</code> entity</p> <code>[]</code> <code>guess_mime</code> <code>bool</code> <p>If true, automatically guess and document the MIME type of the file based on its extension</p> <code>True</code> Example <pre><code>from rdfcrate import uris, AttachedCrate\n\nAttachedCrate(\".\").register_file(\"./some/data.txt\", [\n    (uris.description, Literal(\"This is a file with some data\")),\n])\n</code></pre>"},{"location":"docs/api/#rdfcrate.AttachedCrate","title":"<code>rdfcrate.AttachedCrate</code>  <code>dataclass</code>","text":"<p>               Bases: <code>RoCrate</code></p> <p>See https://www.researchobject.org/ro-crate/specification/1.2-DRAFT/structure#attached-ro-crate</p>"},{"location":"docs/api/#rdfcrate.AttachedCrate.root","title":"<code>root: Path = field(init=False)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The RO-Crate directory</p>"},{"location":"docs/api/#rdfcrate.AttachedCrate.register_dir","title":"<code>register_dir(path: Path | str, attrs: Attributes = [], recursive: bool = False, **kwargs: Any)</code>","text":"<p>See <code>RoCrate.register_dir</code>.</p> <p>Parameters:</p> Name Type Description Default <code>recursive</code> <code>bool</code> <p>If true, register all files and subdirectories in the directory. The automatically created children will only have default metadata. You can use <code>add_metadata</code> to document them more comprehensively.</p> <code>False</code>"},{"location":"docs/api/#rdfcrate.AttachedCrate.register_file","title":"<code>register_file(path: Path | str, attrs: Attributes = [], guess_mime: bool = True, add_size: bool = False, **kwargs: Any)</code>","text":"<p>See <code>RoCrate.register_file</code>.</p> <p>Parameters:</p> Name Type Description Default <code>add_size</code> <code>bool</code> <p>If true, automatically add the size of the file to the metadata</p> <code>False</code>"},{"location":"docs/api/#rdfcrate.AttachedCrate.write","title":"<code>write()</code>","text":"<p>Writes the RO-Crate to <code>ro-crate-metadata.json</code></p>"},{"location":"docs/api/#rdfcrate.uris","title":"<code>rdfcrate.uris</code>","text":"<p>URIs for RO-Crate</p>"},{"location":"docs/api/#rdfcrate.bioschemas","title":"<code>rdfcrate.bioschemas</code>","text":"<p>URIs for Bioschemas</p>"},{"location":"docs/api/#rdfcrate.spec_version","title":"<code>rdfcrate.spec_version</code>","text":"<p>Contains objects representing the different versions of the RO-Crate specification.</p> <p>Attributes:</p> Name Type Description <code>ROCrate0_2</code> <code>SpecVersion</code> <p>RO-Crate 0.2</p> <code>ROCrate1_0</code> <code>SpecVersion</code> <p>RO-Crate 1.0</p> <code>ROCrate1_1</code> <code>SpecVersion</code> <p>RO-Crate 1.1</p> <code>ROCrate1_2</code> <code>SpecVersion</code> <p>RO-Crate 1.2</p>"},{"location":"docs/guide/","title":"Guide","text":""},{"location":"docs/guide/#thinking-in-triples","title":"Thinking in Triples","text":"<p>When using <code>rdfcrate</code>, remember that every property is a triple of:</p> <ul> <li>Subject: the thing being described</li> <li>Predicate: the relationship between the subject and the object</li> <li>Object: the value or target of the relationship</li> </ul> <p>If you\u2019re used to JSON-LD, it\u2019s good to understand that:</p> <ul> <li>JSON-LD objects are just triples that all share the same subject</li> <li>The <code>@type</code> field is just a specific <code>type</code> predicate</li> <li>You don\u2019t have to worry about <code>@context</code> at all. Hooray!</li> </ul> <p>You can see this demonstrated when we convert from a JSON-LD entity into triples:</p> <pre><code>from rdflib import Graph\nimport pandas as pd\n\njson_ld = \"\"\"\n    {\n        \"@context\": \"https://w3id.org/ro/crate/1.2-DRAFT/context\",\n        \"@id\": \"https://www.geonames.org/2152593/\",\n        \"@type\": \"Place\",\n        \"name\": \"Prahran\"\n    }\n\"\"\"\ngraph = Graph().parse(data=json_ld, format=\"json-ld\")\nprint(pd.DataFrame(graph, columns=(\"subject\", \"predicate\", \"object\")).to_markdown(index=False))\n</code></pre> subject predicate object https://www.geonames.org/2152593/ http://schema.org/name Prahran https://www.geonames.org/2152593/ http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://schema.org/Place"},{"location":"docs/guide/#uris","title":"URIs","text":"<p><code>rdfcrate</code> provides a library of useful IRIs/URIs that can be used as predicates (field names), or types. The <code>rdfcrate.uris</code> module contains all URIs that are part of RO-Crate by default, which can help you when using autocomplete:</p> <p></p> <p>There are also BioSchemas specific IRIs in the <code>rdfcrate.bioschemas</code> module.</p>"},{"location":"docs/guide/#rdflib-types","title":"<code>rdflib</code> Types","text":"<p>While JSON-LD uses context to understand what is an IRI and what is a normal string, <code>rdflib</code> uses some special types to distinguish this. Likely every attribute you pass to <code>rdfcrate</code> will be one of:</p> <ul> <li><code>rdflib.URIRef</code>   for any identifier including types and properties. Everything inside   <code>rdfcrate.uris</code> and <code>rdfcrate.bioschemas</code> is a <code>URIRef</code>.</li> <li><code>rdflib.Literal</code>   for actual data like numbers and strings.</li> <li><code>rdflib.BNode</code>   which are IDs for blank nodes for entities that don\u2019t really make   sense as an individual objects.</li> </ul> <p>Here\u2019s an example that uses all three to describe an event schedule that repeats every 3 years:</p> <pre><code>from rdfcrate import AttachedCrate, uris\nfrom rdflib import Literal, URIRef, BNode\n\ncrate = AttachedCrate(\".\")\nevery_three_years = crate.add_entity(BNode(), [uris.Schedule], [\n    (uris.repeatFrequency, Literal(\"P3Y\")),\n    (uris.description, Literal(\"Repeats every 3 years\")),\n])\n</code></pre>"},{"location":"docs/guide/#associating-entities","title":"Associating Entities","text":"<p>RDF doesn\u2019t really have a concept of nested entities. Instead, you associate two entities using a triple of the form <code>(Entity A's IRI, Some Predicate, Entity B's IRI)</code>. In this example, we link the unnamed <code>every_three_years</code> schedule with a specific event:</p> <pre><code>crate.add_entity(URIRef(\"https://www.ngv.vic.gov.au/triennial\"), [uris.Event], [\n    (uris.name, Literal(\"NGV Triennial\")),\n    (uris.eventSchedule, every_three_years),\n])\n</code></pre>"},{"location":"docs/guide/#multiple-values","title":"Multiple Values","text":"<p>If you want to specify that a certain field has a list of values, you don\u2019t use a list inside the tuple. Instead you repeat the same predicate multiple times. For example:</p> <pre><code>from rdfcrate import AttachedCrate, uris\nfrom rdflib import Literal, URIRef\n\ncrate = AttachedCrate(\".\").add_entity(URIRef(\"#hook_turn\"), [uris.HowTo], [\n    (uris.step, Literal(\"Indicate right from the left lane\")),\n    (uris.step, Literal(\"Proceed into the intersection\")),\n    (uris.step, Literal(\"Wait until lights on the road you are entering are green\")),\n    (uris.step, Literal(\"Make a right turn\")),\n])\n</code></pre>"},{"location":"docs/motivation/","title":"Motivation","text":"<p>RO-Crate is stored as JSON-LD, which seems user-friendly to people who are used to working with JSON. Unfortunately, once you get beyond the basics, JSON-LD is actually quite complex. It has special keys like <code>@context</code>, <code>@id</code> and <code>@type</code>, it has multiple ways to represent relationships, it has multiple forms like framed, flattened and expanded, and it uses URL prefixes. Because of this, you might find it easier to just embrace RDF concepts directly, where everything is just a triple of subject (the thing being described), predicate (the relationship) and object (the value), that's it!</p> <p>RdfCrate provide some helpful utilities for creating RO-Crates on top of RDF, but it never tries to disguise it.</p>"},{"location":"specifications/","title":"Bioschemas Specifications Repository","text":"<p>We use the Bioschemas Specifications repository to:</p> <ul> <li> <p>Provide example markup for profiles, see below</p> </li> <li> <p>Track issues relating to Bioschemas specifications (profiles and types), website, and governance </p> </li> <li> <p>Give detailed guidance for specification development and support tools through the wiki</p> </li> </ul> <p>The content of the Bioschemas website is managed in the bioschemas.github.io repository, while the governance structure of the Bioschemas community is managed in the governance repository.</p>"},{"location":"specifications/#profile-examples","title":"Profile Examples","text":"<p>The folders in this repository correspond to the profiles developed by the Bioschemas community. </p> <p>Within each folder, you will find a README file giving a brief overview of the profile, and an examples folder. </p> <p>Within the examples folder, you will find subfolders corresponding to different versions of the profile. Within these folders you will provide examples of markup that conform to the specific version of a profile.</p>"},{"location":"specifications/Beacon/","title":"Beacon Specification","text":""},{"location":"specifications/Beacon/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; DataCatalog</p>"},{"location":"specifications/Beacon/#profile","title":"Profile","text":"<p>This profile provides a simple way for a beacon to self-describe their genetic variant cardinality service for better integration with other beacons within the beacon-network. It builds upon the Beacon service API and uses existing Schema.org entities and properties. </p>"},{"location":"specifications/Beacon/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Beacon profile generated by the Beacons group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Beacon/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Beacon Issues</li> </ul>"},{"location":"specifications/BioChemEntity/","title":"BioChemEntity Specification","text":""},{"location":"specifications/BioChemEntity/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity</p> <p>Note: Bioschemas do not intend to develop a profile for the BioChemEntity type. Instead, profiles will be developed for the subtypes of BioChemEntity such as Gene, MolecularEntity, Protein, etc.</p>"},{"location":"specifications/BioChemEntity/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>BioChemEntity Issues</li> </ul>"},{"location":"specifications/BioChemEntity/useCases/","title":"Record","text":"<p>Thing &gt; PhysicalEntity</p>"},{"location":"specifications/BioChemEntity/useCases/#use-cases","title":"Use cases","text":"<p>Findability Easily finding proteins, samples, phenotypes and so on resources on the web</p> <p>Accessibility Gathering structured information from different life sciences resources without dealing with multiple formats</p> <p>Resource Index Getting a quick view on how ontologies are used in resources marked with Bioschemas</p> <p>Summarization Getting a quick summary with information from different resources as well as links to them</p>"},{"location":"specifications/BioChemStructure/","title":"BioChemStructure Specification","text":""},{"location":"specifications/BioChemStructure/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt; BioChemStructure</p>"},{"location":"specifications/BioChemStructure/#profile","title":"Profile","text":"<p>This profile provides a way to denote the structures of biological (e.g. Gene or Protein) or chemical structures. </p>"},{"location":"specifications/BioChemStructure/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the BioChemStructure profile generated by the Chemicals group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/BioChemStructure/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>BioChemStructure Issues</li> </ul>"},{"location":"specifications/BioSample/","title":"BioSample Specification","text":""},{"location":"specifications/BioSample/#type","title":"Type","text":"<p>Thing &gt; Sample &gt; BioSample</p>"},{"location":"specifications/BioSample/#profile","title":"Profile","text":"<p>The BioSample Profile presents the Bioschemas markup when describing a BioSample. It provides more specific properties than the generic Sample Profile. </p>"},{"location":"specifications/BioSample/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the BioSample profile generated by the Samples group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/BioSample/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Samples Issues</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/","title":"Types to support discovery of life sciences resources","text":"<p>The Bioschemas Community have prepared an initial set of types for representing core life sciences resources to be considered for inclusion in Schema.org. The types support searching for resources, but leave the accurate modelling of bioinformatics to the numerous specialised overlapping domain ontologies. For each type, leading domain ontologies have been considered.</p> <p>The collection of types focuses on genes, proteins, and their chemical interactions. We have proposed one generic type (BioChemEntity) under which we expect the majority of Bioschemas proposed types to sit. We believe that Taxon is a more generic type and have thus not put it under BioChemEntity. Development work on other types continues and can be seen in the drafts section of the types page.</p> <p>The development of the types has been driven by use cases and experiences from working deployed markup (list of live deployments). Each type is available from the Bioschemas website with detailed notes on the modelling of the type included in the Bioschemas examples repository. We also include a link to a live deployment of the type.</p>"},{"location":"specifications/BioschemasRelease1_Notes/#proposed-types-and-hierarchy","title":"Proposed Types and Hierarchy","text":"<ul> <li>Thing</li> <li>BioChemEntity (notes) abstract type not expected to have deployments<ul> <li>ChemicalSubstance (notes) deployment on NanoCommons (Google SDTT)</li> <li>Gene (notes) deployment on eDGAR (Google SDTT)</li> <li>MolecularEntity (notes) deployment on ChEMBL (Google SDTT)</li> <li>Protein (notes) deployment on DisProt (Google SDTT)</li> </ul> </li> <li>Taxon (notes) deployment at Mus\u00e9um National D\u2019Histoire Naturelle (Google SDTT)</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/#ontologies-considered","title":"Ontologies Considered","text":"<p>This is a non-exhaustive list of domain specific and general purpose ontologies that have been considered during the development of the Bioschemas types:</p> <ul> <li>Biodiversity Information Standards (TDWGOntology)</li> <li>Chemical Entities of Biological Interest (ChEBI)</li> <li>Chemical Information Ontology (CHEMINF)</li> <li>Feature Annotation Location Description Ontology (FALDO)</li> <li>Gene Ontology (GO)</li> <li>NCBI TaxonomyProtein Ontology (PRO)</li> <li>SemanticScience Integrated Ontology (SIO)</li> <li>UniProt RDF Schema Ontology (UniProt)</li> <li>Wikidata Ontology</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/BioChemEntityCodingNotes/","title":"Proposal of BioChemEntity Type","text":"<p>The Bioschemas community would like to propose a new top-level type from which the majority of life sciences focused types will extend.</p>"},{"location":"specifications/BioschemasRelease1_Notes/BioChemEntityCodingNotes/#background","title":"Background","text":"<p>The <code>BioChemEntity</code> type has been discussed in the Bioschemas community in:</p> <ul> <li>Issues</li> <li>BioChemEntity definition discussions</li> <li>Relationship to schema.org/Intangible</li> <li>All issues labelled BioChemEntity</li> <li>Bioschemas community mailing list thread</li> <li>Discussion on different representation approaches for a Protein</li> <li>All emails containing the term BioChemEntity</li> </ul> <p>The Bioschemas community were originally looking for a minimal extension to Schema.org that could be specialised with properties from other life sciences ontologies. The original version of <code>BioChemEntity</code> was devised for this purpose with specialisms defined in usage profiles to enable the markup of pages about proteins, chemicals, etc. This proved to make the markup overly complicated both for publishers and consumers of the markup.</p> <p>This revised version of <code>BioChemEntity</code> now serves the purpose of being a parent type for the various types required for the life sciences to support search use cases, and some data exchange. We have deliberately chosen to go for a shallow and wide subtree from <code>BioChemEntity</code> to avoid focusing on acurate biological modelling, instead focusing on the properties required for search.</p> <p>The following ontologies were considered when developing this proposal:</p> <ul> <li>Chemical Entities of Biological Interest (ChEBI)</li> <li>Chemical Information Ontology (CHEMINF) </li> <li>Feature Annotation Location Description Ontology (FALDO)</li> <li>Gene Ontology (GO)</li> <li>Protein Ontology (PRO)</li> <li>SemanticScience Integrated Ontology (SIO)</li> <li>UniProt RDF Schema Ontology (UniProt)</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/BioChemEntityCodingNotes/#proposal","title":"Proposal","text":"<p>For convenience the <code>BioChemEntity</code> proposal is available from the Bioschemas website (https://bioschemas.org/types/BioChemEntity/).</p> <p>We summarise here the design decisions taken to reach this proposal.</p>"},{"location":"specifications/BioschemasRelease1_Notes/BioChemEntityCodingNotes/#type-hierarchy","title":"Type Hierarchy","text":"<p>We are proposing to add the <code>BioChemEntity</code> type directly under <code>schema:Thing</code>. <code>BioChemEntity</code> is being proposed as an umbrella type that the various types coming from Bioschemas will be placed under. This is to prevent bloat at the top level of Schema.org. </p>"},{"location":"specifications/BioschemasRelease1_Notes/BioChemEntityCodingNotes/#properties","title":"Properties","text":"<ul> <li>associatedDisease: New property</li> <li>bioChemInteraction: New property</li> <li>bioChemSimilarity: New property</li> <li>biologicalRole: New property</li> <li>hasBioChemEntityPart: New property Enables the capture of sub-parts but keeping the property distinct from <code>hasPart</code> which is used for creative works.</li> <li>hasMolecularFunction: New property</li> <li>hasRepresentation: New property</li> <li>isEncodedByBioChemEntity: New property Property is generic to not only be used for gene/protein encodings</li> <li>isInvolvedInBiologicalProcess: New property</li> <li>isLocatedInSubcellularLocation: New property</li> <li>isPartOfBioChemEntity: New property Inverse of hasBioChemEntity part. Corresponds with <code>schema:isPartOf</code></li> <li>taxonomicRange: New property</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/ChemicalSubstanceCodingNotes/","title":"Proposal of ChemicalSubstance Type","text":"<p>The Bioschemas community would like to propose a new type for marking up details of chemical substances which represents the composition of molecular entities. </p> <p>This type should be used in conjunction with the newly proposed <code>MolecularEntity</code> type.</p>"},{"location":"specifications/BioschemasRelease1_Notes/ChemicalSubstanceCodingNotes/#background","title":"Background","text":"<p>The <code>ChemicalSubstance</code> type has been discussed in the Bioschemas community in:</p> <ul> <li>Issues</li> <li>Clarifying ChemicalSubstance vs MolecularEntity</li> <li>All issues labelled ChemicalSubstance</li> <li>Bioschemas community mailing list thread</li> <li>Difference between ChemicalSubstance and MolecularEntity</li> <li>All emails containing the term ChemicalSubstance</li> </ul> <p>The proposal is based on the ChEBI ontology and its definition of a chemical substance (CHEBI:59999).</p> <p>The following ontologies were also considered when developing this proposal:</p> <ul> <li>Chemical Entities of Biological Interest (ChEBI)</li> <li>Chemical Information Ontology (CHEMINF) </li> <li>SemanticScience Integrated Ontology (SIO)</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/ChemicalSubstanceCodingNotes/#proposal","title":"Proposal","text":"<p>For convenience the <code>ChemicalSubstance</code> proposal is available from the Bioschemas website (https://bioschemas.org/types/ChemicalSubstance/).</p> <p>Schema.org already includes a <code>schema:Substance</code> type which is defined as a subclass of <code>schema:MedicalEntity</code>. A <code>ChemicalSubstance</code> and <code>MolecularEntity</code> in general are not medical tools and many properties of <code>MedicalEntity</code> simply do not apply to the two newly proposed concepts.</p> <p>We summarise here the design decisions taken to reach this proposal.</p>"},{"location":"specifications/BioschemasRelease1_Notes/ChemicalSubstanceCodingNotes/#type-hierarchy","title":"Type Hierarchy","text":"<p>We are proposing to add the <code>ChemicalSubstance</code> type under a <code>BioChemEntity</code> type which inherits from <code>schema:Thing</code>. <code>BioChemEntity</code> is being proposed as an umbrella type that the various types coming from Bioschemas will be placed under. This is to prevent bloat at the top level of Schema.org. </p>"},{"location":"specifications/BioschemasRelease1_Notes/ChemicalSubstanceCodingNotes/#properties","title":"Properties","text":"<ul> <li>chemicalComposition: New property</li> <li>chemicalRole: New property</li> <li>potentialUse: New property</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/GeneCodingNotes/","title":"Proposal of Gene Type","text":"<p>The Bioschemas community would like to propose a new type for marking up details of a gene.</p>"},{"location":"specifications/BioschemasRelease1_Notes/GeneCodingNotes/#background","title":"Background","text":"<p>The <code>Gene</code> type has been discussed in the Bioschemas community in:</p> <ul> <li>Issues</li> <li>Gene Definition</li> <li>All issues labelled Gene</li> <li>Bioschemas community mailing list thread</li> <li>MyGene.info use case</li> <li>All emails containing the term Gene</li> </ul> <p>The following ontologies were considered when developing this proposal:</p> <ul> <li>Feature Annotation Location Description Ontology (FALDO)</li> <li>Gene Ontology (GO)</li> <li>Protein Ontology (PRO)</li> <li>SemanticScience Integrated Ontology (SIO)</li> <li>UniProt RDF Schema Ontology (UniProt)</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/GeneCodingNotes/#proposal","title":"Proposal","text":"<p>For convenience the <code>Gene</code> proposal is available on the Bioschemas website (https://bioschemas.org/types/Gene/).</p> <p>We summarise here the design decisions taken to reach this proposal.</p>"},{"location":"specifications/BioschemasRelease1_Notes/GeneCodingNotes/#type-hierarchy","title":"Type Hierarchy","text":"<p>We are proposing to add the <code>Gene</code> type under a <code>BioChemEntity</code> type which inherits from <code>schema:Thing</code>. <code>BioChemEntity</code> is being proposed as an umbrella type that the various types coming from Bioschemas will be placed under. This is to prevent bloat at the top level of Schema.org. </p>"},{"location":"specifications/BioschemasRelease1_Notes/GeneCodingNotes/#properties","title":"Properties","text":"<ul> <li>alternativeOf: New property This property allows the linking of the many variants of a gene.</li> <li>encodesBioChemEntity: New property</li> <li>expressedIn: New property</li> <li>hasBioPolymerSequence: New property</li> <li>hasStatus: New property</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/MolecularEntityCodingNotes/","title":"Proposal of MolecularEntity Type","text":"<p>The Bioschemas community would like to propose a new type for marking up details of a molecular entity. </p>"},{"location":"specifications/BioschemasRelease1_Notes/MolecularEntityCodingNotes/#background","title":"Background","text":"<p>The <code>MolecularEntity</code> type has been discussed in the Bioschemas community in:</p> <ul> <li>Issues</li> <li>Clarifying ChemicalSubstance vs MolecularEntity</li> <li>All issues labelled MolecularEntity</li> <li>Bioschemas community mailing list thread</li> <li>Difference between ChemicalSubstance and MolecularEntity</li> <li>All emails containing the term MolecularEntity</li> </ul> <p>The proposal is based on the ChEBI ontology and its definition of a molecular entity (CHEBI:23367).</p> <p>The following ontologies were also considered when developing this proposal:</p> <ul> <li>Chemical Entities of Biological Interest (ChEBI)</li> <li>Chemical Information Ontology (CHEMINF) </li> <li>SemanticScience Integrated Ontology (SIO)</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/MolecularEntityCodingNotes/#proposal","title":"Proposal","text":"<p>For convenience the <code>MolecularEntity</code> proposal is available from the Bioschemas website (https://bioschemas.org/types/MolecularEntity/)).</p> <p>Schema.org already includes a <code>schema:Substance</code> type which is defined as a subclass of <code>schema:MedicalEntity</code>. A <code>ChemicalSubstance</code> and <code>MolecularEntity</code> in general are not medical tools and many properties of <code>MedicalEntity</code> simply do not apply to the two newly proposed concepts.</p> <p>We summarise here the design decisions taken to reach this proposal.</p>"},{"location":"specifications/BioschemasRelease1_Notes/MolecularEntityCodingNotes/#type-hierarchy","title":"Type Hierarchy","text":"<p>We are proposing to add the <code>MolecularEntity</code> type under a <code>BioChemEntity</code> type which inherits from <code>schema:Thing</code>. <code>BioChemEntity</code> is being proposed as an umbrella type that the various types coming from Bioschemas will be placed under. This is to prevent bloat at the top level of Schema.org.</p>"},{"location":"specifications/BioschemasRelease1_Notes/MolecularEntityCodingNotes/#properties","title":"Properties","text":"<ul> <li>chemicalRole: New property</li> <li>inChI: New property</li> <li>inChIKey: New property</li> <li>iupacName: New property</li> <li>molecularFormula: New property</li> <li>molecularWeight: New property</li> <li>monoisotopicMolecularWeight: New property</li> <li>potentialUse: New property</li> <li>smiles: New property</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/ProteinCodingNotes/","title":"Proposal of Protein Type","text":"<p>The Bioschemas community would like to propose a new type for marking up details of a protein.</p>"},{"location":"specifications/BioschemasRelease1_Notes/ProteinCodingNotes/#background","title":"Background","text":"<p>The <code>Protein</code> type has been discussed in the Bioschemas community in:</p> <ul> <li>Issues</li> <li>Relationship between Protein and Organism/Taxon</li> <li>Protein Properties</li> <li>All issues labelled Protein</li> <li>Bioschemas community mailing list thread</li> <li>Evolution of Protein w.r.t. BioChemEntity thread one, thread two</li> <li>All emails containing the term Protein</li> </ul> <p>The following ontologies were considered when developing this proposal:</p> <ul> <li>Feature Annotation Location Description Ontology (FALDO)</li> <li>Gene Ontology (GO)</li> <li>Protein Ontology (PRO)</li> <li>SemanticScience Integrated Ontology (SIO)</li> <li>UniProt RDF Schema Ontology (UniProt)</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/ProteinCodingNotes/#proposal","title":"Proposal","text":"<p>For convenience the <code>Protein</code> proposal is available from the Bioschemas website (https://bioschemas.org/types/Protein/).</p> <p>We summarise here the design decisions taken to reach this proposal.</p>"},{"location":"specifications/BioschemasRelease1_Notes/ProteinCodingNotes/#type-hierarchy","title":"Type Hierarchy","text":"<p>We are proposing to add the <code>Protein</code> type under a <code>BioChemEntity</code> type which inherits from <code>schema:Thing</code>. <code>BioChemEntity</code> is being proposed as an umbrella type that the various types coming from Bioschemas will be placed under. This is to prevent bloat at the top level of Schema.org. </p>"},{"location":"specifications/BioschemasRelease1_Notes/ProteinCodingNotes/#properties","title":"Properties","text":"<ul> <li>hasBioPolymerSequence: New property </li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/TaxonCodingNotes/","title":"Proposal of Taxon Type","text":"<p>The Bioschemas community would like to propose a new type for marking up details of a taxon. </p>"},{"location":"specifications/BioschemasRelease1_Notes/TaxonCodingNotes/#background","title":"Background","text":"<p>The <code>Taxon</code> type has been discussed in the Bioschemas community in:</p> <ul> <li>Issues</li> <li>Taxon vs TaxonName</li> <li>Taxon Hierarchy</li> <li>Related ontologies</li> <li>All issues labelled Taxon</li> <li>Bioschemas community mailing list thread</li> <li>All emails containing the term Taxon</li> </ul> <p>The proposal is based on the Darwin Core standard for Taxons that is widely used to model taxons. Other ontologies considered during the design were:</p> <ul> <li>Biodiversity Information Standards (TDWG) Ontology</li> <li>NCBI Taxonomy</li> <li>Wikidata</li> </ul>"},{"location":"specifications/BioschemasRelease1_Notes/TaxonCodingNotes/#proposal","title":"Proposal","text":"<p>For convenience the <code>Taxon</code> proposal is available from the Bioschemas website (https://bioschemas.org/types/Taxon/).</p> <p>We summarise here the design decisions taken to reach this proposal.</p>"},{"location":"specifications/BioschemasRelease1_Notes/TaxonCodingNotes/#type-hierarchy","title":"Type Hierarchy","text":"<p>We are proposing to add the <code>Taxon</code> type under a <code>BioChemEntity</code> type which inherits from <code>schema:Thing</code>.</p> <p><code>BioChemEntity</code> is being proposed as an umbrella type that the various types coming from Bioschemas will be placed under. This is to prevent bloat at the top level of Schema.org.</p>"},{"location":"specifications/BioschemasRelease1_Notes/TaxonCodingNotes/#properties","title":"Properties","text":"<ul> <li>childTaxon: New property</li> <li>hasDefinedTerm: Property reuse Extends the range of the property to include Taxon.</li> <li>parentTaxon: New property Based on <code>dwc:parentNameUsageID</code></li> <li>taxonRank: New property Based on <code>dwc:taxonRank</code></li> </ul>"},{"location":"specifications/BioschemasRelease2_Notes/","title":"More types to support discovery of life sciences resources","text":"<p>This document is still in draft status!</p>"},{"location":"specifications/BioschemasRelease2_Notes/#proposed-types-and-hierarchy","title":"Proposed Types and Hierarchy","text":"<p>The below hierarch only shows those Schema.org types that are being extended. Hyperlinked types are the new proposals.</p> <ul> <li>Thing</li> <li>BioChemEntity<ul> <li>BioSample (notes) 10 million+ pages on BioSamples (Google SDTT), further deployments in development</li> </ul> </li> </ul>"},{"location":"specifications/BioschemasRelease2_Notes/BioSampleCodingNotes/","title":"Proposal of BioSample Type","text":"<p>The Bioschemas community would like to propose a new type for marking up details of biological samples such as those found in bio banks, museums, and herbaria.</p>"},{"location":"specifications/BioschemasRelease2_Notes/BioSampleCodingNotes/#background","title":"Background","text":"<p>The <code>BioSample</code> type has been discussed in the Bioschemas community in:</p> <ul> <li>Issues</li> <li>Discussion on Sample Type properties</li> <li>Human &amp; Museum examples</li> <li>All issues labelled Sample</li> <li>Bioschemas community mailing list thread</li> <li>BioSamples type for review</li> <li>All emails containing the term Sample</li> </ul> <p>The proposal is an evolution of an earlier prototype of a Sample type developed for exchanging data about samples and deployed on the EBI BioSamples archive. </p>"},{"location":"specifications/BioschemasRelease2_Notes/BioSampleCodingNotes/#proposal","title":"Proposal","text":"<p>The proposed type is available at http://sdo-bioschemas-227516.appspot.com/BioSample (a cached copy is also available on the Bioschemas website).</p> <p>We summarise here the design decisions taken to reach this proposal.</p>"},{"location":"specifications/BioschemasRelease2_Notes/BioSampleCodingNotes/#type-hierarchy","title":"Type Hierarchy","text":"<p>We are proposing to add the <code>BioSample</code> type under a <code>BioChemEntity</code> type which inherits from <code>schema:Thing</code>. <code>BioChemEntity</code> is being proposed as an umbrella type that the various types coming from Bioschemas will be placed under. This is to prevent bloat at the top level of Schema.org. <code>BioSample</code> will reuse some of the properties from <code>BioChemEntity</code>, e.g. <code>associatedDisease</code> and <code>taxonomicRange</code>.</p> <p>An alternative would be for there to be a more generic <code>Sample</code> type in Schema.org with <code>BioSample</code> being a child. You could imagine there being a need to markup a sample of a product for sale which would have a different emphasis from a <code>BioSample</code>. Similarly, there have been discussions with the Bioschemas community about the need for a <code>GeoSample</code> that would include spatial properties, or <code>StatisticalSample</code>, but we have not worked on either of these. If this approach is favoured by the Schema.org community, then the <code>associatedDisease</code> and <code>taxonomicRange</code> properties would need their definitions extended, unless a multi-inheritance of <code>Sample</code> and <code>BioChemEntity</code> is used.</p>"},{"location":"specifications/BioschemasRelease2_Notes/BioSampleCodingNotes/#properties","title":"Properties","text":"<ul> <li>additionalProperty:  Range extended to include <code>BioSample</code>.</li> <li>collector: New property Considered <code>creditedTo</code> but felt that the two were distinct from each other in their intended use. There are also distinct uses of these terms to refer to different entities, i.e. who collected the sample versus who it is credited to.</li> <li>custodian: New property Considered <code>accountablePerson</code> but range only permitted <code>schema:Person</code>. The custodian of a sample is often an <code>schema:Organization</code>.</li> <li>dateCreated: Range extended to include <code>BioSample</code>. Potential issue is that the description of <code>dateCreated</code> mentions <code>CreativeWork</code> which <code>BioSample</code> does not inherit from.</li> <li>gender: Range extended to include <code>BioSample</code>.</li> <li>isControl: New property</li> <li>itemLocation Range extended to include <code>BioSample</code>.</li> <li>locationCreated Range extended to include <code>BioSample</code>. Potential issue is that the description of <code>locationCreated</code> mentions <code>CreativeWork</code> which <code>BioSample</code> does not inherit from.</li> <li>samplingAge: New property  Considered <code>age</code> but felt that was too generic, particularly with the proposed description of the property.</li> </ul>"},{"location":"specifications/ChemicalSubstance/","title":"Index","text":""},{"location":"specifications/ChemicalSubstance/#chemicalsubstance-specification","title":"ChemicalSubstance Specification","text":""},{"location":"specifications/ChemicalSubstance/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt; ChemicalSubstance</p>"},{"location":"specifications/ChemicalSubstance/#profile","title":"Profile","text":"<p>The ChemicalSubstance Profile provides a way to denote resources about chemical compounds. For specific molecular entities, use the MolecularEntity Profile.</p>"},{"location":"specifications/ChemicalSubstance/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the ChemicalSubstance profile generated by the Chemicals group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/ChemicalSubstance/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>ChemicalSubstance Issues</li> </ul>"},{"location":"specifications/ChemicalSubstance/examples/0.4-DRAFT/readme/","title":"How to embed the BioSchemas JSON-LD in HTML","text":"<p>The JSON-LD can best be autogenerated and embedded in HTML with a <code>&lt;script&gt;</code> element like this:</p> <pre><code>&lt;script type=\"application/ld+json\"&gt;\n{\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"ChemicalSubstance\",\n  \"identifier\": \"50-78-2\",\n  \"name\": \"Benzoic acid, 2-(acetyloxy)-\",\n  \"url\": \"https://commonchemistry.org/ChemicalDetail.aspx?ref=50-78-2\"\n}\n&lt;/script&gt;\n</code></pre> <p>The JSON-LD here is minimal content for the ChemicalSubstance. This folder contains three examples, with varying levels of marginality:</p> <ul> <li>Minimum</li> <li>Recommended (at least at the <code>ChemicalSubstance</code> level</li> <li>an extended example</li> </ul>"},{"location":"specifications/ComputationalWorkflow/","title":"ComputationalWorkflow Specification","text":""},{"location":"specifications/ComputationalWorkflow/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; SoftwareSourceCode &gt; ComputationalWorkflow</p>"},{"location":"specifications/ComputationalWorkflow/#profile","title":"Profile","text":"<p>The ComputationalWorkflow Profile presents the Bioschemas markup when describing a ComputationalWorkflow.</p>"},{"location":"specifications/ComputationalWorkflow/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the ComputationalWorkflow profile generated by the Workflow group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/ComputationalWorkflow/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>ComputationalWorkflow Issues</li> </ul>"},{"location":"specifications/Course/","title":"Course Specification","text":""},{"location":"specifications/Course/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; LearningResource &gt; Course</p> <p>Thing &gt; CreativeWork &gt; Course</p>"},{"location":"specifications/Course/#profile","title":"Profile","text":"<p>The DataCatalog profile covers the Schema.org and Bioschemas properties necessary to describe educational courses offered in the life sciences.</p>"},{"location":"specifications/Course/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Course profile generated by the Training group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p> <p>Creating your own Course metadata</p> <ol> <li>Copy the <code>template.json</code> example.</li> <li>Change the values of the minimum fields.</li> <li>Add as many recommended and optional fields as possible.</li> <li>Wrap up the example using script tags. <pre><code>&lt;script type=\"application/ld+json\"&gt;\n  ....\n&lt;/script&gt;\n</code></pre></li> <li>Embed the example in your landing page.</li> </ol>"},{"location":"specifications/Course/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Course Issues</li> </ul>"},{"location":"specifications/CourseInstance/","title":"CourseInstance Specification","text":""},{"location":"specifications/CourseInstance/#type","title":"Type","text":"<p>Thing &gt; Event &gt; CourseInstance</p>"},{"location":"specifications/CourseInstance/#profile","title":"Profile","text":"<p>The CourseInstance profile covers the Schema.org and Bioschemas properties necessary to describe the delivery event associated with an educational course offered in the life sciences.</p>"},{"location":"specifications/CourseInstance/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the CourseInstance profile generated by the Training group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p> <p>Creating your own CourseInstance metadata</p> <ol> <li>Copy the <code>template.json</code> example.</li> <li>Change the values of the minimum fields.</li> <li>Add as many recommended and optional fields as possible.</li> <li>Wrap up the example using script tags. <pre><code>&lt;script type=\"application/ld+json\"&gt;\n  ....\n&lt;/script&gt;\n</code></pre></li> <li>Embed the example in your landing page.</li> </ol>"},{"location":"specifications/CourseInstance/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>CourseInstance Issues</li> </ul>"},{"location":"specifications/DataCatalog/","title":"DataCatalog Specification","text":""},{"location":"specifications/DataCatalog/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; DataCatalog</p>"},{"location":"specifications/DataCatalog/#profile","title":"Profile","text":"<p>The DataCatalog profile covers the schema.org and bioschemas.org properties necessary to describe data repositories and catalogues in the life sciences.</p>"},{"location":"specifications/DataCatalog/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the DataCatalog profile generated by the Data Repositories group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p> <p>Creating your own DataCatalog metadata</p> <ol> <li>Copy the <code>template.json</code> example.</li> <li>Change the values of the minimum fields.</li> <li>Add as many recommended and optional fields as possible.</li> <li>Wrap up the example using script tags. <pre><code>&lt;script type=\"application/ld+json\"&gt;\n  ....\n&lt;/script&gt;\n</code></pre></li> <li>Embed the example in your landing page.</li> </ol> <p>Any questions email:</p> <p>Peter McQuilton - peter.mcquilton@oerc.ox.ac.uk (FAIRsharing.org)</p>"},{"location":"specifications/DataCatalog/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>DataCatalog Issues</li> </ul>"},{"location":"specifications/DataRecord/","title":"DataRecord Specification","text":""},{"location":"specifications/DataRecord/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; DataRecord</p>"},{"location":"specifications/DataRecord/#profile","title":"Profile","text":"<p>The DataRecord profile provides a way to denote the metadata associated with an individual record in a dataset.</p>"},{"location":"specifications/DataRecord/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the DataRecord profile generated by the Datasets group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p> <p>Creating your own DataRecord metadata:</p> <ol> <li>Copy the <code>template.json</code> example.</li> <li>Change the values of the minimum fields.</li> <li>Add as many recommended and optional fields as possible.</li> <li>Wrap up the example using script tags.</li> </ol> <pre><code>&lt;script type=\"application/ld+json\"&gt;\n  ....\n&lt;/script&gt;\n</code></pre> <ol> <li>Embed the example in your site.</li> </ol>"},{"location":"specifications/DataRecord/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>DataRecord Issues</li> </ul>"},{"location":"specifications/DataRecord/useCases/","title":"Record","text":"<p>Thing &gt; CreativeWork &gt; Dataset &gt; Record</p>"},{"location":"specifications/DataRecord/useCases/#use-cases","title":"Use cases","text":"<p>Findability Easily finding proteins, samples, phenotypes and so on resources on the web</p> <p>Accessibility Gathering structured information from different life sciences resources without dealing with multiple formats</p> <p>Resource Index Getting a quick view on how ontologies are used in resources marked with Bioschemas</p> <p>Summarization Getting a quick summary with information from different resources as well as links to them</p>"},{"location":"specifications/DataRecord/examples/ModellingDecision/","title":"Modelling Decision for DataRecord","text":"<p>Problems have been encountered when scraping data from three resources using the DataRecord profile to separate the metadata about the biological concept from the concept itself. This work was done in the context of the Intrinsically Disordered Protein BioHackathon topic which was scraping data from DisProt, mobiDb, and ProteinEnsemble to generate an IDP Knowledge Graph.</p> <p>To enable the idea of the DataRecord, a separate identifier is needed for the record from the biological resource, i.e. they need to be two separate nodes in the graph. The problems stem from the fact that most resources use the identifier for the biological resource to identify the webpage associated with the resource, and even when resources such as UniProt do implement this \u2013 using purl.uniprot.org identifiers for the proteins and www.uniprot.org identifiers for the webpage \u2013 others linking to that data often conflate the two. While this separation is logically correct and enables separate statements to be made about both, it is often not found in Schema.org deployments. Ultimately, this comes down to the web being a messy place and deployments often looking for the easiest way to get their markup on their site.</p>"},{"location":"specifications/DataRecord/examples/ModellingDecision/#issue-that-arises","title":"Issue that arises","text":"<p>The current deployment of DisProt (and the other resources) introduce a hash based identifier within the markup to represent the data record and separate it from the URL of the page which is used as the identifier for the protein. The following code snippet shows the relevant lines of markup in JSON-LD. <pre><code>{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"DataRecord\",\n  \"@id\": \"http://disport.org/DP00003#DR\",\n  \"includedInDataset\": \"https://disprot.org/#2019_09\",\n  \"mainEntity\": {\n    \"@id\": \"http://disport.org/DP00003\",\n    \"@type\": \"Protein\"\n  }\n}\n</code></pre> While this approach is consistent within itself, it becomes problematic when others link to it. For example, the scraping tool BMUSE adds provenance data to each scraped page so that there is a trail of where the data has been retrieved. This provenance uses the URL of the page that has been scraped. So for our example, that would be the following snippet. <pre><code>{\n    \"@id\": \"https://bioschemas.org/crawl/v1/disprot/DP00003/20201108/2242\",\n    \"http://purl.org/pav/retrievedFrom\": {\n        \"@id\": \"http://disprot.org/DP00003\"\n      },\n    \"http://purl.org/pav/retrievedOn\": {\n        \"@value\": \"2020-11-08T21:20:09\",\n        \"@type\": \"http://www.w3.org/2001/XMLSchema#dateTime\"\n      }\n}\n</code></pre> When this data is combined, we end up with the Protein being retrieved by BMUSE rather than the DataRecord as shown in the following figure.</p> <p></p>"},{"location":"specifications/DataRecord/examples/ModellingDecision/#possible-solutions","title":"Possible Solutions","text":"<p>The problem arises from the webpage URL being used for the protein rather than the data record. However, we could conceive of some alternative approaches where different URLs are used.</p>"},{"location":"specifications/DataRecord/examples/ModellingDecision/#identifiersorg","title":"Identifiers.org","text":"<p>DisProt is registered with Identifiers.org, so we could use the Identifiers.org URL to represent the protein and the DisProt identifier for the data record as shown in the following snippet (full example).</p> <pre><code>{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"DataRecord\",\n  \"@id\": \"http://disport.org/DP00003\",\n  \"includedInDataset\": \"https://disprot.org/#2019_09\",\n  \"mainEntity\": {\n    \"@id\": \"https://identifiers.org/disprot:DP00003\",\n    \"@type\": \"Protein\"\n  }\n}\n</code></pre> <p>The downside of this approach is that the identifiers for the protein are no longer in the namespace, or control, of the data provider.</p>"},{"location":"specifications/DataRecord/examples/ModellingDecision/#www-subdomain","title":"<code>www</code> Subdomain","text":"<p>We could rely on the identifiers in the data not using the <code>www</code> subdomain and make a distinction between <code>http://www.disprot.org/DP00003</code> and <code>http://disprot.org/DP00003</code>. Again here is the relevant snippet (full example).</p> <pre><code>{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"DataRecord\",\n  \"@id\": \"http://www.disport.org/DP00003\",\n  \"includedInDataset\": \"https://disprot.org/#2019_09\",\n  \"mainEntity\": {\n    \"@id\": \"http://disprot.org/DP00003\",\n    \"@type\": \"Protein\"\n  }\n}\n</code></pre> <p>This approach has the advantage that the namespaces are in the control of the data provider but is susceptible to confusion between the subdomain and the main namespace.</p>"},{"location":"specifications/DataRecord/examples/ModellingDecision/#remove-datarecord","title":"Remove DataRecord","text":"<p>At present, we have no data particularly associated with the DataRecord resource or any consumption use case for retrieving data records. As such, we could simplify the markup and remove the <code>DataRecord</code> resource from the graph. The snipped would then be (full example).</p> <pre><code>{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Protein\",\n  \"@id\": \"http://disport.org/DP00003\",\n  \"includedInDataset\": \"https://disprot.org/#2019_09\"\n}\n</code></pre> <p>An advantage of this approach is that it simplifies the deployed markup meaning that there more chance of accurate deployments and less of a training burden.</p> <p>The following figure shows the resulting graph.</p> <p></p>"},{"location":"specifications/DataRecord/examples/ModellingDecision/#chosen-solution","title":"Chosen Solution","text":"<p>Within the three data sources that we are considering in the IDP use case, the data record was added in for a notion of correctness rather than for any particular consumption need. </p> <p>To simplify the deployment, we are proposing to adopt the approach of no DataRecord.</p>"},{"location":"specifications/Dataset/","title":"Index","text":""},{"location":"specifications/Dataset/#dataset-specification","title":"Dataset Specification","text":""},{"location":"specifications/Dataset/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; Dataset</p>"},{"location":"specifications/Dataset/#profile","title":"Profile","text":"<p>The Dataset profile provides a way to denote the metadata associated with an individual record in a dataset.</p>"},{"location":"specifications/Dataset/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Dataset profile generated by the Datasets group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p> <p>Creating your own Dataset metadata:</p> <ol> <li>Copy the <code>template.json</code> example.</li> <li>Change the values of the minimum fields.</li> <li>Add as many recommended and optional fields as possible.</li> <li>Wrap up the example using script tags. <pre><code>&lt;script type=\"application/ld+json\"&gt;\n  ....\n&lt;/script&gt;\n</code></pre></li> <li>Embed the example in your site.</li> </ol>"},{"location":"specifications/Dataset/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Dataset Issues</li> </ul>"},{"location":"specifications/DefinedTerm/","title":"Profile for DefinedTerm and DefinedTermSet","text":"<p>The two SchemaOrg types DefinedTerm and DefinedTermSet are allowed in many places as property values.</p> <p>In e.g. the life-sciences, there are a number of controlled vocabularies and ontologies, which are often used as source of the DefinedTerms. Many of the, can be browsed and accessed through terminology and lookup services or portals.</p> <p>For linked data applications it is sufficient for an entity with <code>@type=\"DefinedTerm\"</code> to link to an <code>@id</code> pointing to the IRI of the referenced concept.</p> <p>In other cases, more information is needed to search and view defined term information without having to lookup external resources. E.g., a domain-specific search engine can create faceted search based on the <code>name</code> property, like e.g. done in TeSS. Aforementioned terminology services also offer linking and query interfaces beyond IRIs as parameters.</p> <p>Another possible use of a conformant <code>DefinedTerm</code> is to enable creating hyperlinks to other web ressources, e.g. https://bio.tools/t?inputDataFormatID=%22format_3244%22 or provide tool-tips if the <code>description</code> is provided.</p> <p>Some typical OBO ontologies can be taken as inspiration of properties that should be required or recommended in a Bioschema DefinedTerm profile. We also provide some mapping information between properties of <code>DefinedTerm</code> and those from OBO, OWL and SKOS, following work in https://doi.org/10.1186/2041-1480-2-S1-S3.</p> <p>It is not intended to duplicate the content and expressivity of powerful ontology representations and serialisations like OWL or RDF.</p>"},{"location":"specifications/Disease/","title":"Disease Specification","text":""},{"location":"specifications/Disease/#type","title":"Type","text":"<p>Thing &gt; MedicalEntity &gt; MedicalCondition</p>"},{"location":"specifications/Disease/#profile","title":"Profile","text":"<p>The Disease Profile presents the Bioschemas markup when describing a disease.</p>"},{"location":"specifications/Disease/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Disease profile generated by the Rare Disease group. Examples are purely illustrative and may use fictional data.</p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Disease/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Disease Issues</li> </ul>"},{"location":"specifications/Enzyme/","title":"Index","text":""},{"location":"specifications/Enzyme/#enzyme-specification","title":"Enzyme Specification","text":""},{"location":"specifications/Enzyme/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt; Enzyme</p>"},{"location":"specifications/Enzyme/#profile","title":"Profile","text":"<p>The Enzyme profile provides a way to denote the metadata associated with an enzyme.</p>"},{"location":"specifications/Enzyme/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Enzyme profile generated by the Proteins group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Enzyme/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Enzyme Issues</li> </ul>"},{"location":"specifications/Event/","title":"Event Specification","text":""},{"location":"specifications/Event/#type","title":"Type","text":"<p>Thing &gt; Event</p>"},{"location":"specifications/Event/#profile","title":"Profile","text":"<p>The Event Profile is used for describing an event. This includes conferences, workshops, meetings, courses, receptions, networking and prize givings. </p>"},{"location":"specifications/Event/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Event profile generated by the Training group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Event/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Event Issues</li> </ul>"},{"location":"specifications/FormalParameter/","title":"FormalParameter Specification","text":""},{"location":"specifications/FormalParameter/#type","title":"Type","text":"<p>Thing &gt; Intangible &gt; FormalParameter</p>"},{"location":"specifications/FormalParameter/#profile","title":"Profile","text":"<p>The FormalParameter Profile presents the Bioschemas markup when describing a FormalParameter of a ComputationalWorkflow.</p>"},{"location":"specifications/FormalParameter/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the FormalParameter profile generated by the Workflow group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/FormalParameter/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>FormalParameter Issues</li> </ul>"},{"location":"specifications/Gene/","title":"Gene Specification","text":""},{"location":"specifications/Gene/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt; Gene</p>"},{"location":"specifications/Gene/#profile","title":"Profile","text":"<p>The Gene Profile is used for describing a gene resource. </p>"},{"location":"specifications/Gene/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Gene profile generated by the Genes group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Gene/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Gene Issues </li> </ul>"},{"location":"specifications/Gene/examples/0.8-RELEASE/readme/","title":"Note to 0.8-RELEASE examples","text":"<p>The 0.8-RELEASE only introduces cardinalities for associatedDisease (MANY) and taxonomicRange (MANY) so 0.7-RELEASE examples also work for 0.8-RELEASE</p>"},{"location":"specifications/Journal/readme/","title":"Journal Specification","text":""},{"location":"specifications/Journal/readme/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; CreativeWorkSeries &gt; Periodical</p>"},{"location":"specifications/Journal/readme/#profile","title":"Profile","text":"<p>The Journal Profile aims at representing journals publishing scholarly publications.</p>"},{"location":"specifications/Journal/readme/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Journal profile generated by the Scholarly Publications group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Journal/readme/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Journal Issues</li> </ul>"},{"location":"specifications/LabProcess/","title":"LabProcess Specification","text":""},{"location":"specifications/LabProcess/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; LabProcess</p>"},{"location":"specifications/LabProcess/#profile","title":"Profile","text":""},{"location":"specifications/LabProcess/#example-markup","title":"Example Markup","text":""},{"location":"specifications/LabProcess/#issue-tracker","title":"Issue Tracker","text":""},{"location":"specifications/LabProtocol/","title":"LabProtocol Specification","text":""},{"location":"specifications/LabProtocol/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; LabProtocol</p>"},{"location":"specifications/LabProtocol/#profile","title":"Profile","text":"<p>The LabProtocol Profile defines the properties used to describe an experimental protocol as a sequence of tasks and operations executed to perform experimental research in biological and biomedical areas.</p>"},{"location":"specifications/LabProtocol/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the LabProtocol profile generated by the LabProtocols group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/LabProtocol/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>LabProtocol Issues</li> </ul>"},{"location":"specifications/MolecularEntity/","title":"Index","text":""},{"location":"specifications/MolecularEntity/#molecularentity-specification","title":"MolecularEntity Specification","text":""},{"location":"specifications/MolecularEntity/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt;  MolecularEntity</p>"},{"location":"specifications/MolecularEntity/#profile","title":"Profile","text":"<p>The MolecularEntity Profile provides a way to denote resources about a specific molecular entity. For compounds, please use ChemicalSubstance.</p>"},{"location":"specifications/MolecularEntity/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the MolecularEntity profile generated by the Chemicals group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/MolecularEntity/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>MolecularEntity Issues</li> </ul>"},{"location":"specifications/Phenotype/","title":"Phenotype specification","text":""},{"location":"specifications/Phenotype/#type","title":"Type","text":"<p>Thing &gt;  Phenotype</p>"},{"location":"specifications/Phenotype/#profile","title":"Profile","text":"<p>The Phenotype Profile provides a way to denote resources about a phenotype.</p>"},{"location":"specifications/Phenotype/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Phenotype profile generated by the Phenotypes group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Phenotype/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Phenotype Issues</li> </ul>"},{"location":"specifications/Protein/","title":"Protein Specification","text":""},{"location":"specifications/Protein/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt; Protein</p>"},{"location":"specifications/Protein/#profile","title":"Profile","text":"<p>The Protein Profile provides details for providing markup for a protein resource.</p>"},{"location":"specifications/Protein/#links-to-other-relevant-profiles","title":"Links to other relevant profiles","text":"<p>Protein records will be included in a Dataset which will belong to a DataCatalog. A Protein can also be related to Protein Annotation or Protein Structure</p> <ul> <li>DataCatalog</li> <li>Dataset</li> <li>ProteinAnnotation</li> <li>ProteinStructure</li> </ul>"},{"location":"specifications/Protein/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Protein profile generated by the Proteins group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in. </p>"},{"location":"specifications/Protein/#examples-combining-protein-with-data-record","title":"Examples Combining Protein with Data Record","text":"<p>We include examples not just for proteins but also for records describing proteins. As Protein we will model the entity itself (name, organism, gene, and so), while as Record we will model a bit more technical stuff (latest modifed date, dataset where it belongs to, citations, distribution and so).</p> <ul> <li>Protein entity in JSON-LD</li> <li>Protein entity in Turtle</li> <li>Record of a protein entity</li> <li>Full example of a protein record about a protein entity</li> </ul>"},{"location":"specifications/Protein/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Protein Issues</li> </ul>"},{"location":"specifications/Protein/#validation","title":"Validation","text":"<ul> <li>ShEx</li> <li>Protein profile</li> <li>Try it on! </li> <li>With SHACL, coming soon</li> </ul>"},{"location":"specifications/ProteinAnnotation/","title":"ProteinAnnotation Specification","text":""},{"location":"specifications/ProteinAnnotation/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity</p>"},{"location":"specifications/ProteinAnnotation/#profile","title":"Profile","text":"<p>The ProteinAnnotation Profile provides details for providing markup for a protein annotation.</p>"},{"location":"specifications/ProteinAnnotation/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the ProteinAnnotation profile generated by the Proteins group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in. </p>"},{"location":"specifications/ProteinAnnotation/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>ProteinAnnotation Issues</li> </ul>"},{"location":"specifications/PublicationIssue/readme/","title":"PublicationIssue Specification","text":""},{"location":"specifications/PublicationIssue/readme/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; PublicationIssue</p>"},{"location":"specifications/PublicationIssue/readme/#profile","title":"Profile","text":"<p>The PublicationIssue Profile aims at representing issues contained in journals publishing scholarly publications.</p>"},{"location":"specifications/PublicationIssue/readme/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the PublicationIssue profile generated by the Scholarly Publications group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/PublicationIssue/readme/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>PublicationIssue Issues</li> </ul>"},{"location":"specifications/PublicationVolume/readme/","title":"PublicationVolume Specification","text":""},{"location":"specifications/PublicationVolume/readme/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; PublicationVolume</p>"},{"location":"specifications/PublicationVolume/readme/#profile","title":"Profile","text":"<p>The PublicationVolume Profile aims at representing volumes contained in journals publishing scholarly publications.</p>"},{"location":"specifications/PublicationVolume/readme/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the PublicationVolume profile generated by the Scholarly Publications group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/PublicationVolume/readme/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>PublicationVolume Issues</li> </ul>"},{"location":"specifications/Sample/","title":"Sample Specification","text":""},{"location":"specifications/Sample/#type","title":"Type","text":"<p>Thing &gt; Sample</p>"},{"location":"specifications/Sample/#profile","title":"Profile","text":"<p>The Sample Profile presents the Bioschemas markup when describing a Sample. </p> <p>For BioSamples, please use the more specific BioSample Profile.</p>"},{"location":"specifications/Sample/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Sample profile generated by the Samples group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Sample/#other-examples","title":"Other examples","text":"<p>We include examples not just for samples but also for records describing samples. As Sample we could model the entity itself (name, organism, additionalProperties, etc.), while as DataRecord we will model a bit more technical stuff (latest modifed date, dataset where it belongs to, etc.).</p> <ul> <li>DataRecord - BioSamples</li> <li>DataRecord - Rare Disease</li> </ul>"},{"location":"specifications/Sample/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Samples Issues</li> </ul>"},{"location":"specifications/ScholarlyArticle/","title":"ScholarlyArticle Specification","text":""},{"location":"specifications/ScholarlyArticle/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; Article &gt; ScholarlyArticle</p>"},{"location":"specifications/ScholarlyArticle/#profile","title":"Profile","text":"<p>The ScholarlyArticle Profile identifies a subset of the Schema.org properties for a scholarly article, choosing those that are most pertinent for the life sciences.</p>"},{"location":"specifications/ScholarlyArticle/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the ScholarlyArticle profile generated by the Scholarly Publications group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/ScholarlyArticle/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>ScholarlyArticle Issues</li> </ul>"},{"location":"specifications/SemanticTextAnnotation/readme/","title":"SemanticTextAnnotation Specification","text":""},{"location":"specifications/SemanticTextAnnotation/readme/#type","title":"Type","text":"<p>Thing &gt; CreativeWork</p>"},{"location":"specifications/SemanticTextAnnotation/readme/#profile","title":"Profile","text":"<p>The SemanticTextAnnotation Profile aims at representing text-based semantic annotations particularly on scholarly publications.</p>"},{"location":"specifications/SemanticTextAnnotation/readme/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the SemanticTextAnnotation profile generated by the Scholarly Publications group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/SemanticTextAnnotation/readme/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>SemanticTextAnnotation Issues</li> </ul>"},{"location":"specifications/SequenceAnnotation/","title":"SequenceAnnotation Specification","text":"<p>Supersedes ProteinAnnotation</p>"},{"location":"specifications/SequenceAnnotation/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt; SequenceAnnotation</p>"},{"location":"specifications/SequenceAnnotation/#profile","title":"Profile","text":"<p>The SequenceAnnotation Profile provides details for providing markup for a sequence annotation. The sequence could be a nucleic acid, e.g. Gene, DNA, or RNA, or an amino acid, e.g. Protein.</p>"},{"location":"specifications/SequenceAnnotation/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the SequenceAnnotation profile generated by the Proteins group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in. </p>"},{"location":"specifications/SequenceAnnotation/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>SequenceAnnotation Issues</li> </ul>"},{"location":"specifications/SequenceRange/","title":"SequenceRange Specification","text":""},{"location":"specifications/SequenceRange/#type","title":"Type","text":"<p>Thing &gt; BioChemEntity &gt; SequenceRange</p>"},{"location":"specifications/SequenceRange/#profile","title":"Profile","text":"<p>The SequenceRange Profile provides details for providing markup for a sequence range. The sequence could be a nucleic acid, e.g. Gene, DNA, or RNA, or an amino acid, e.g. Protein.</p>"},{"location":"specifications/SequenceRange/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the SequenceRange profile generated by the Proteins group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in. </p>"},{"location":"specifications/SequenceRange/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>SequenceRange Issues</li> </ul>"},{"location":"specifications/Study/","title":"Study Specification","text":""},{"location":"specifications/Study/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; Study</p>"},{"location":"specifications/Study/#profile","title":"Profile","text":"<p>The Study Profile provides markup a record about a study.</p>"},{"location":"specifications/Study/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Study profile generated by the Studies group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Study/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Study Issues</li> </ul>"},{"location":"specifications/Taxon/","title":"Taxon specification","text":""},{"location":"specifications/Taxon/#type","title":"Type","text":"<p>Thing &gt; Taxon</p>"},{"location":"specifications/Taxon/#profile","title":"Profile","text":"<p>This profile aims to denote a taxon by common properties such as its scientific name, authority, taxonomic rank and vernacular names. It is also a means to link to existing taxonomic registers where each taxon has a URI.</p>"},{"location":"specifications/Taxon/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Taxon profile generated by the Biodiversity group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Taxon/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Taxon Issues</li> </ul>"},{"location":"specifications/TaxonName/","title":"TaxonName Specification","text":""},{"location":"specifications/TaxonName/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; TaxonName</p>"},{"location":"specifications/TaxonName/#profile","title":"Profile","text":"<p>This profile provides a way to denote the scientific names of a taxon.  A scientific name taxon may be the currently valid (zoological) or accepted (botanical) name of the taxon, or a synonym (non accepted) name.</p>"},{"location":"specifications/TaxonName/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the TaxonName profile generated by the Biodiversity group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/TaxonName/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>TaxonName Issues</li> </ul>"},{"location":"specifications/Tool/","title":"Tool Specification","text":""},{"location":"specifications/Tool/#type","title":"Type","text":"<p>Thing &gt; CreativeWork &gt; SoftwareApplication</p>"},{"location":"specifications/Tool/#profile","title":"Profile","text":"<p>The Tool Profile provides a way to describe bioscience tools and software on the World Wide Web. It defines a set of metadata and vocabularies, built on top of existing technologies and standards, that can be used to represent such tools in Web pages and applications. The goal of the specification is to make it easier to discover, exchange and integrate information about life science tools across the Internet.</p>"},{"location":"specifications/Tool/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the Tool profile generated by the Tools group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/Tool/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>Tool Issues</li> </ul>"},{"location":"specifications/TrainingMaterial/","title":"TrainingMaterial Specification","text":""},{"location":"specifications/TrainingMaterial/#type","title":"Type","text":"<p>Thing &gt; CreativeWork</p>"},{"location":"specifications/TrainingMaterial/#profile","title":"Profile","text":"<p>The Life Science TrainingMaterial Profile provides a way to describe bioscience training material on the World Wide Web. It defines a set of metadata and vocabularies, built on top of existing technologies and standards, that can be used to represent events in Web pages and applications. The goal of the specification is to make it easier to discover, exchange and integrate life science training material information across the Internet. </p>"},{"location":"specifications/TrainingMaterial/#example-markup","title":"Example Markup","text":"<p>This repository contains example markup for the TrainingMaterial profile generated by the Training group. Examples are purely illustrative and may use fictional data. </p> <p>Examples should be stored in a subfolder indicating which version of the profile it is valid for. Please check to ensure the example you are reading matches the version of the profile you are interested in.</p>"},{"location":"specifications/TrainingMaterial/#issue-tracker","title":"Issue Tracker","text":"<ul> <li>TrainingMaterial Issues</li> </ul>"}]}