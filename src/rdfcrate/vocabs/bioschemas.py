"""This module was generated by RdfCrate codegen. Do not edit by hand."""
from __future__ import annotations
from rdfcrate.rdftype import RdfClass
from rdfcrate.rdfprop import RdfProperty
from rdfcrate.rdfterm import RdfTerm
from rdfcrate.vocabs import schemaorg
from rdfcrate.vocabs import bioschemas

class Gene(schemaorg.Biochementity):
    term = RdfTerm('https://bioschemas.org/terms/Gene', 'Gene')

class Protein(schemaorg.Biochementity):
    term = RdfTerm('https://bioschemas.org/terms/Protein', 'Protein')

class Chemicalsubstance(schemaorg.Biochementity):
    term = RdfTerm('https://bioschemas.org/terms/ChemicalSubstance', 'Chemicalsubstance')

class Molecularentity(schemaorg.Biochementity):
    term = RdfTerm('https://bioschemas.org/terms/MolecularEntity', 'Molecularentity')

class Biosample(schemaorg.Biochementity):
    term = RdfTerm('https://bioschemas.org/terms/BioSample', 'Biosample')

class Formalparameter(schemaorg.Intangible):
    term = RdfTerm('https://bioschemas.org/terms/FormalParameter', 'Formalparameter')

class Computationalworkflow(schemaorg.Softwaresourcecode):
    term = RdfTerm('https://bioschemas.org/terms/ComputationalWorkflow', 'Computationalworkflow')

class Taxonname(schemaorg.Creativework):
    term = RdfTerm('https://bioschemas.org/terms/TaxonName', 'Taxonname')

class Taxon(schemaorg.Thing):
    term = RdfTerm('https://bioschemas.org/terms/Taxon', 'Taxon')

class Biochementity(schemaorg.Thing):
    term = RdfTerm('https://bioschemas.org/terms/BioChemEntity', 'Biochementity')

class biocheminteraction(RdfProperty[bioschemas.Biochementity]):
    term = RdfTerm('https://bioschemas.org/terms/bioChemInteraction', 'biocheminteraction')

class childtaxon(RdfProperty[schemaorg.Text | schemaorg.Url | schemaorg.Taxon]):
    term = RdfTerm('https://bioschemas.org/terms/childTaxon', 'childtaxon')

class samplingage(RdfProperty[schemaorg.Integer]):
    term = RdfTerm('https://bioschemas.org/terms/samplingAge', 'samplingage')

class hasstatus(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/hasStatus', 'hasstatus')

class additionalproperty(RdfProperty[schemaorg.Propertyvalue]):
    term = RdfTerm('https://bioschemas.org/terms/additionalProperty', 'additionalproperty')

class monoisotopicmolecularweight(RdfProperty[schemaorg.Quantitativevalue | schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/monoisotopicMolecularWeight', 'monoisotopicmolecularweight')

class parenttaxon(RdfProperty[schemaorg.Text | schemaorg.Url | schemaorg.Taxon]):
    term = RdfTerm('https://bioschemas.org/terms/parentTaxon', 'parenttaxon')

class collector(RdfProperty[schemaorg.Person | schemaorg.Organization]):
    term = RdfTerm('https://bioschemas.org/terms/collector', 'collector')

class gender(RdfProperty[schemaorg.Text | schemaorg.Gendertype]):
    term = RdfTerm('https://bioschemas.org/terms/gender', 'gender')

class associateddisease(RdfProperty[schemaorg.Medicalcondition | schemaorg.Url | schemaorg.Propertyvalue]):
    term = RdfTerm('https://bioschemas.org/terms/associatedDisease', 'associateddisease')

class inchi(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/inChI', 'inchi')

class molecularweight(RdfProperty[schemaorg.Quantitativevalue | schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/molecularWeight', 'molecularweight')

class custodian(RdfProperty[schemaorg.Person | schemaorg.Organization]):
    term = RdfTerm('https://bioschemas.org/terms/custodian', 'custodian')

class potentialuse(RdfProperty[schemaorg.Definedterm]):
    term = RdfTerm('https://bioschemas.org/terms/potentialUse', 'potentialuse')

class molecularformula(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/molecularFormula', 'molecularformula')

class chemicalcomposition(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/chemicalComposition', 'chemicalcomposition')

class expressedin(RdfProperty[schemaorg.Biochementity | schemaorg.Anatomicalsystem | schemaorg.Definedterm | schemaorg.Anatomicalstructure]):
    term = RdfTerm('https://bioschemas.org/terms/expressedIn', 'expressedin')

class isinvolvedinbiologicalprocess(RdfProperty[schemaorg.Propertyvalue | schemaorg.Url | schemaorg.Definedterm]):
    term = RdfTerm('https://bioschemas.org/terms/isInvolvedInBiologicalProcess', 'isinvolvedinbiologicalprocess')

class smiles(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/smiles', 'smiles')

class isencodedbybiochementity(RdfProperty[bioschemas.Gene]):
    term = RdfTerm('https://bioschemas.org/terms/isEncodedByBioChemEntity', 'isencodedbybiochementity')

class datecreated(RdfProperty[schemaorg.Date]):
    term = RdfTerm('https://bioschemas.org/terms/dateCreated', 'datecreated')

class documentation(RdfProperty[schemaorg.Creativework | schemaorg.Url]):
    term = RdfTerm('https://bioschemas.org/terms/documentation', 'documentation')

class ispartofbiochementity(RdfProperty[bioschemas.Biochementity]):
    term = RdfTerm('https://bioschemas.org/terms/isPartOfBioChemEntity', 'ispartofbiochementity')

class islocatedinsubcellularlocation(RdfProperty[schemaorg.Propertyvalue | schemaorg.Url | schemaorg.Definedterm]):
    term = RdfTerm('https://bioschemas.org/terms/isLocatedInSubcellularLocation', 'islocatedinsubcellularlocation')

class hasbiopolymersequence(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/hasBioPolymerSequence', 'hasbiopolymersequence')

class hasmolecularfunction(RdfProperty[schemaorg.Url | schemaorg.Definedterm | schemaorg.Propertyvalue]):
    term = RdfTerm('https://bioschemas.org/terms/hasMolecularFunction', 'hasmolecularfunction')

class taxonomicrange(RdfProperty[schemaorg.Definedterm | schemaorg.Propertyvalue | bioschemas.Taxon | schemaorg.Url]):
    term = RdfTerm('https://bioschemas.org/terms/taxonomicRange', 'taxonomicrange')

class hasbiochementitypart(RdfProperty[bioschemas.Biochementity]):
    term = RdfTerm('https://bioschemas.org/terms/hasBioChemEntityPart', 'hasbiochementitypart')

class scientificname(RdfProperty[schemaorg.Text | schemaorg.Url | bioschemas.Taxonname]):
    term = RdfTerm('https://bioschemas.org/terms/scientificName', 'scientificname')

class alternativeof(RdfProperty[schemaorg.Gene]):
    term = RdfTerm('https://bioschemas.org/terms/alternativeOf', 'alternativeof')

class taxonrank(RdfProperty[schemaorg.Propertyvalue | schemaorg.Url | schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/taxonRank', 'taxonrank')

class encodingformat(RdfProperty[schemaorg.Url | schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/encodingFormat', 'encodingformat')

class valuerequired(RdfProperty[schemaorg.Boolean]):
    term = RdfTerm('https://bioschemas.org/terms/valueRequired', 'valuerequired')

class locationcreated(RdfProperty[schemaorg.Place]):
    term = RdfTerm('https://bioschemas.org/terms/locationCreated', 'locationcreated')

class biochemsimilarity(RdfProperty[bioschemas.Biochementity]):
    term = RdfTerm('https://bioschemas.org/terms/bioChemSimilarity', 'biochemsimilarity')

class alternatescientificname(RdfProperty[schemaorg.Text | bioschemas.Taxonname | schemaorg.Url]):
    term = RdfTerm('https://bioschemas.org/terms/alternateScientificName', 'alternatescientificname')

class encodesbiochementity(RdfProperty[schemaorg.Biochementity]):
    term = RdfTerm('https://bioschemas.org/terms/encodesBioChemEntity', 'encodesbiochementity')

class iscontrol(RdfProperty[schemaorg.Boolean]):
    term = RdfTerm('https://bioschemas.org/terms/isControl', 'iscontrol')

class defaultvalue(RdfProperty[schemaorg.Text | schemaorg.Thing]):
    term = RdfTerm('https://bioschemas.org/terms/defaultValue', 'defaultvalue')

class softwarerequirements(RdfProperty[schemaorg.Text | schemaorg.Url]):
    term = RdfTerm('https://bioschemas.org/terms/softwareRequirements', 'softwarerequirements')

class chemicalrole(RdfProperty[schemaorg.Definedterm]):
    term = RdfTerm('https://bioschemas.org/terms/chemicalRole', 'chemicalrole')

class funding(RdfProperty[schemaorg.Grant]):
    term = RdfTerm('https://bioschemas.org/terms/funding', 'funding')

class iupacname(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/iupacName', 'iupacname')

class itemlocation(RdfProperty[schemaorg.Postaladdress | schemaorg.Text | schemaorg.Place]):
    term = RdfTerm('https://bioschemas.org/terms/itemLocation', 'itemlocation')

class output(RdfProperty[bioschemas.Formalparameter]):
    term = RdfTerm('https://bioschemas.org/terms/output', 'output')

class input(RdfProperty[bioschemas.Formalparameter]):
    term = RdfTerm('https://bioschemas.org/terms/input', 'input')

class hasrepresentation(RdfProperty[bioschemas.Biochementity]):
    term = RdfTerm('https://bioschemas.org/terms/hasRepresentation', 'hasrepresentation')

class biologicalrole(RdfProperty[schemaorg.Definedterm]):
    term = RdfTerm('https://bioschemas.org/terms/biologicalRole', 'biologicalrole')

class inchikey(RdfProperty[schemaorg.Text]):
    term = RdfTerm('https://bioschemas.org/terms/inChIKey', 'inchikey')